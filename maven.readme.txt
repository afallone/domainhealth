
To install the plug-in into your local Maven repository, run the following command from the
ORACLE_COMMON/oracle_common/plugins/maven/com/oracle/maven/oracle-maven-sync/12.1.2 directory:
mvn install:install-file -DpomFile=oracle-maven-sync.12.1.2.pom -Dfile=oracle-maven-sync.12.1.2.jar
mvn install:install-file -DpomFile=oracle-maven-sync-12.1.3.pom -Dfile=oracle-maven-sync-12.1.3.jar
mvn install:install-file -DpomFile=oracle-maven-sync-12.2.1.pom -Dfile=oracle-maven-sync-12.2.1.jar

mvn com.oracle.maven:oracle-maven-sync:push -Doracle-maven-sync.oracleHome=c:\Oracle\Middleware\Oracle_Home_12c -Doracle-maven-sync.testingOnly=false

Populating the Maven Repository Manager

Oracle Fusion Middleware 12c provides a Maven Synchronization plug-in that simplifies the process of setting up repositories
and completely eliminates the need to know what patches are installed in a particular environment.
This plug-in enables you to populate a Maven repository from a given Oracle home.
After you patch your Oracle home, you should run this plug-in to ensure that your Maven repository matches Oracle home.
This ensures that your builds use correct versions of all artifacts in that particular environment.
The Oracle Maven Synchronization Plug-in is included in the Oracle WebLogic Server,

Installing Oracle Maven Synchronization Plug-In

The Maven Project Object Model (POM) file that describes the plug-in, which is located at:
ORACLE_HOME/oracle_common/plugins/maven/com/oracle/maven/oracle-maven-sync/12.1.2/oracle-maven-sync.12.1.2.pom

The JAR file that contains the plug-in, which is located at:
ORACLE_HOME/oracle_common/plugins/maven/com/oracle/maven/oracle-maven-sync/12.1.2/oracle-maven-sync.12.1.2.jar

To install the plug-in into your local Maven repository, run the following command from the
ORACLE_COMMON/oracle_common/plugins/maven/com/oracle/maven/oracle-maven-sync/12.1.2 directory:

mvn install:install-file -DpomFile=oracle-maven-sync.12.1.2.pom -Dfile=oracle-maven-sync.12.1.2.jar

The simplest way deploy the plug-in into a shared internal repository, use the web user interface provided by your
Maven Repository Manager to upload the JAR file into the repository.

An alternative method is to use the deploy plug-in, which you can do by using a command like the following from the
ORACLE_COMMON/oracle_common/plugins/maven/com/oracle/maven/oracle-maven-sync/12.1.2 directory:
mvn deploy:deploy-file -DpomFile=oracle-maven-sync-12.1.2.pom -Dfile=oracle-maven-sync-12.1.2.jar -Durl=http://servername/archiva/repositories/internal -DrepositoryId=internal

Running the Oracle Maven Synchronization Plug-In

The Oracle Maven Synchronization Plug-in supports two Maven goals:

Help, which prints out help information
Push, which is used to populate a repository

You can execute the help goal by running the following command:

mvn com.oracle.maven:oracle-maven-sync:help

Populating Your Maven Repository

To populate your repository, you must use the push goal. You can specify the parameters given in Table 5-1 on the command line or in your Project Object Model file.

This section contains the following topics:

Populating a Local Repository
Populating a Remote Repository
5.3.5.1 Populating a Local Repository

If you are populating your local repository, you only need to specify oracleHome and testingOnly=false.

For example:

mvn com.oracle.maven:oracle-maven-sync:push
 -DoracleHome=/path/to/oracleHome
 -Doracle-maven-sync.testingOnly=false

ex:

mvn com.oracle.maven:oracle-maven-sync:push -DoracleHome=c:\Oracle\Middleware\Oracle_Home_12c -Doracle-maven-sync.testingOnly=false
mvn com.oracle.maven:oracle-maven-sync:push -DoracleHome=c:\Oracle\Middleware\Oracle_Home_12c_12_1_3 -Doracle-maven-sync.testingOnly=false

The localRepository element in your settings.xml file indicates the location of your local Maven repository. If you exclude the localRepository element in settings.xml, the default location is in the ${HOME}/.m2/repository directory.

If you want to override the localRepository value, then you must specify the override location on the command line as a Maven option.

For example:

mvn com.oracle.maven:oracle-maven-sync:push
 -Doracle-maven-sync.oracleHome=/path/to/oracleHome
 -Dmaven.repo.local=/alternate/path

To specify the parameters in your Project Object Model file, you must add a plug-in entry similar to the following in your Project Object Model file:

<plugin>
   <groupId>com.oracle.maven</groupId>
   <artifactId>oracle-maven-sync</artifactId>
   <version>12.1.2</version>
   <configuration>
     <oracleHome>/path/to/oracleHome</oracleHome>
     <testOnly>false</testOnly>
   </configuration>
</plugin>

After adding the plug-in, execute Maven by running the following command on the command line:

mvn com.oracle.maven:oracle-maven-sync:push

http://docs.oracle.com/middleware/1212/core/MAVEN/config_maven.htm#MAVEN311